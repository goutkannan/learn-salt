---
# this salt pillar file preserves original configuration info
{{ pillar['salt_managed_message'] }}

{#- Dear maintainer:
     Don't be confused...
     The 'pillar.get' values here will be initially supplied for the bevy master
     by Vagrant or the bootstrap.py script.
        This template should only be run
        when the pillar flag "doing_bootsrap" is defined.
        The next line ought to trigger an error if otherwise -#}
{% set intentional_error = pillar['doing_bootstrap'] %}  {# Oops! You goofed. #}

{#- Think about it...
    jinja things here will become literals
    in the production pillar .sls file.
    #}

# linux username to own files and run user jobs on server machines...
my_linux_user: {{ salt['pillar.get']('my_linux_user') }}
#
my_linux_uid: '{{ salt['pillar.get']('my_linux_uid') }}'
my_linux_gid: '{{ salt['pillar.get']('my_linux_gid') }}'
#
# Linux password hash for interactive user
linux_password_hash: "{{ salt['pillar.get']('linux_password_hash', '') }}"
#
force_linux_user_password: {{ salt['pillar.get']('force_linux_user_password', true) }}

# copy of the pillar settings from bootstrap -- in case I re-run the state
bevy: {{ salt['pillar.get']('bevy') }}
node_name: {{ salt['pillar.get']('node_name') }}
run_second_minion: {{ salt['pillar.get']('run_second_minion') }}
vbox_install: {{ salt['pillar.get']('vbox_install') }}
vagranthost: {{ salt['pillar.get']('vagranthost') }}
network_mask: {{ salt['pillar.get']('network_mask', '') }}
runas: {{ salt['pillar.get']('runas') }}
cwd: {{ salt['pillar.get']('cwd') }}
bevy_root: '{{ salt['pillar.get']('bevy_root') }}'
bevymaster_address: {{ salt['config.get']('bevymaster_address') }}
...
