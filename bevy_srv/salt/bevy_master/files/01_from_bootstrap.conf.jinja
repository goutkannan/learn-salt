{#- this is the jinja template used to create the configuration file
     /etc/salt/minion.d/01_from_bootstrap.conf
     -#}
# {{ pillar['salt_managed_message'] }}
# created from template bevy_master/files/01_from_bootstrap.conf.jinja

# these settings are specific to the running Salt master or stand-alone minion

{% set bevy_root = salt['config.get']('bevy_root', '/vagrant/bevy_srv') %}
id: {{ salt['config.get']('node_name', salt['config.get']('id')) }}
{% if salt['config.get']('node_name', '') == 'bevymaster' %}master: localhost {% else %}
master: {{ salt['config.get']('bevymaster_address', salt['config.get']('master')) }}
{% endif %}
grains:
  datacenter: bevy
  bevy: {{ salt['config.get']('bevy') }}
  environment: dev
  groups:
    - dynamux

{% if salt['config.get']('run_second_minion') -%}
pidfile: /var/run/salt-minion2.pid
pki_dir: /etc/salt/pki/minion2
sock_dir: /var/run/salt-minion2
log_file: /var/log/salt/minion2
{% endif -%}

run_second_minion: {{ salt['config.get']('run_second_minion') }}

bevy: {{ salt['config.get']('bevy') }}

my_linux_user: {{ salt['config.get']('my_linux_user') }}

worker_threads: 2

mine_interval: 5   # this is a test system, so run the mine every five minutes

{% if bevy_root != '' %}
#
# for salt-call --local, we need to tell Salt minion where to find its files
#
file_roots:    # use this directory rather than /srv/salt
  base:
    - {{ bevy_root }}/salt    # use local directory
    - /srv/salt         # then use the normal place (if it exists)
top_file_merging_strategy: same  # do not merge the top.sls file from srv/salt

pillar_roots:  # use this directory rather than /srv/pillar
  base:
    - {{ bevy_root }}/pillar
    - /srv/pillar
pillar_source_merging_strategy: recurse
{% endif %}
file_ignore_regex:
  - '/\.git($|/)'
#
